<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing 
        infrastructure -->
 	<context:component-scan base-package="com.ccp.*" />
 	
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />
    
 	 <beans:bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<beans:property name="location" value="classpath:settings.properties"/>
	</beans:bean>

    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="${db.driver}" />
        <beans:property name="url" value="${db.url}" />
        <beans:property name="username" value="${db.username}" />
        <beans:property name="password" value="${db.password}" />
        <beans:property name="validationQuery" value="SELECT 1"/>
  		<beans:property name="testOnBorrow" value="true"/>
    </beans:bean>
 
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
            	<beans:value>com.ccp.model.PoolRqst</beans:value>
                <beans:value>com.ccp.model.User</beans:value>
                <beans:value>com.ccp.model.Usertoken</beans:value>
                <beans:value>com.ccp.model.Vehicle</beans:value>
                <beans:value>com.ccp.model.Trip</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</beans:prop>
            	<beans:prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</beans:prop>
            	
            	<beans:prop key="maxwait">10000</beans:prop>
            	<beans:prop key="maxidle">25</beans:prop>
            	<beans:prop key="minidle">5</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
    <beans:bean id="userDAO" class="com.ccp.dao.impl.UserDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="userService" class="com.ccp.service.impl.UserServiceImpl">
        <beans:property name="userDAO" ref="userDAO" />
    </beans:bean>
    
    <beans:bean id="usertokenDAO" class="com.ccp.dao.impl.UsertokenDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="usertokenService" class="com.ccp.service.impl.UsertokenServiceImpl">
        <beans:property name="usertokenDAO" ref="usertokenDAO" />
    </beans:bean>
    
    <beans:bean id="vehicleDAO" class="com.ccp.dao.impl.VehicleDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="vehicleService" class="com.ccp.service.impl.VehicleServiceImpl">
        <beans:property name="vehicleDAO" ref="vehicleDAO" />
    </beans:bean>
    
    <beans:bean id="tripDAO" class="com.ccp.dao.impl.TripDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="tripService" class="com.ccp.service.impl.TripServiceImpl">
        <beans:property name="tripDAO" ref="tripDAO" />
    </beans:bean>
    
     <beans:bean id="poolRqstDAO" class="com.ccp.dao.impl.PoolRqstDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="poolRqstService" class="com.ccp.service.impl.PoolRqstServiceImpl">
        <beans:property name="poolRqstDAO" ref="poolRqstDAO" />
    </beans:bean>
     
    <beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
     
    <!--  proxies classes with aspectj and you may have @Transaction annotations for managing transactions-->    
    <tx:annotation-driven transaction-manager="transactionManager" />
     
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
 	
</beans:beans>